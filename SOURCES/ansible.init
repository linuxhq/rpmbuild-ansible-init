#! /bin/sh
#
# ansible: checkout repo and run ansible
# chkconfig: 235 20 80
# Description: Ansible 
# config: /etc/sysconfig/ansible
#
### BEGIN INIT INFO
# Provides: ansible
# Required-Start: $network 
# Should-Start: ansible
# Required-Stop:
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Short-Description: ansible
# Description: ansible
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

mktemp=0
for i in ${PATH//:/ }
do
  [ -x "${i}/mktemp" ] && let mktemp++
done

[ ${mktemp} -eq 0 ] && exit 1

if [ -f /etc/sysconfig/ansible ]; then
    . /etc/sysconfig/ansible
fi

ansible_bootstrap=${ANSIBLE_BOOTSTRAP-localhost.yml}
ansible_galaxy=${ANSIBLE_GALAXY-/usr/bin/ansible-galaxy}
ansible_playbook=${ANSIBLE_PLAYBOOK-/usr/bin/ansible-playbook}
ansible_repository=${ANSIBLE_REPOSITORY-git@github.com:linuxhq/ansible-bootstrap.git}

prog=ansible
RETVAL=0

start() {
  echo -n $"Creating temporary directory: "
  ansible_home=$(mktemp -d)
  RETVAL=$?
  [ $RETVAL = 0 ] && success
  [ $RETVAL != 0 ] && failure
  echo

  echo -n $"Cloning repository: "
  runuser -s /bin/bash -c "git clone ${ansible_repository} ${ansible_home} >/dev/null 2>&1"
  RETVAL=$?
  [ $RETVAL = 0 ] && success
  [ $RETVAL != 0 ] && failure
  echo

  if [ -f "${ansible_home}/requirements.yml" ]
  then
    echo -n $"Gathering requirements: "
    runuser -s /bin/bash -c "${ansible_galaxy} install -f \
                                               -p ${ansible_home}/roles \
                                               -r ${ansible_home}/requirements.yml \
                                               ${ANSIBLE_GALAXY_OPTS} >/dev/null 2>&1"
    RETVAL=$?
    [ $RETVAL = 0 ] && success
    [ $RETVAL != 0 ] && failure
    echo
  fi

  echo -n $"Executing ansible-playbook: "
  runuser -s /bin/bash -c "${ansible_playbook} -i ${ansible_home}/hosts \
                                               ${ansible_home}/${ansible_bootstrap} \
                                               ${ANSIBLE_PLAYBOOK_OPTS} >/dev/null 2>&1"
  RETVAL=$?
  [ $RETVAL = 0 ] && success
  [ $RETVAL != 0 ] && failure
  echo

  echo -n $"Removing temporary directory: "
  if [ ${ansible_home} == '/' ]; then
    RETVAL=1
  else
    runuser -s /bin/bash -c "[ -d ${ansible_home} ] && rm -rf ${ansible_home}"
  RETVAL=$?
  fi
  [ $RETVAL = 0 ] && success
  [ $RETVAL != 0 ] && failure
  echo
        
}

stop() {
  echo -n $"Stopping $prog: "
  RETVAL=0
  [ $RETVAL = 0 ] && success
  [ $RETVAL != 0 ] && failure
  echo
}

# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  update)
    stop
    start
    ;;
  *)
    echo $"Usage: $prog {start|stop|restart|update}"
    RETVAL=2
esac

exit $RETVAL
